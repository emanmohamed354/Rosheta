Step 1: Set Up Paymob Account
Register at Paymob: First, create an account at Paymob.
Get API Keys: After registering, Paymob will provide you with API keys (API key, integration ID, etc.) in the dashboard. You'll use these to authenticate your requests.

Step 2:
npm install axios

Step 3: Create .env File
Add the following information in your .env file (replace with your actual keys):

bash
Copy code
PAYMOB_API_KEY=your_paymob_api_key_here
PAYMOB_INTEGRATION_ID=your_integration_id_here
PAYMOB_IFRAME_ID=your_iframe_id_here
PAYMOB_HMAC=your_hmac_secret_here

Step 4:
const express = require('express');
const axios = require('axios');
const dotenv = require('dotenv');
dotenv.config();

const app = express();

app.use(express.json());

/**
 * Step 1: Authentication request to get auth_token
 */
app.post('/api/paymob/authenticate', async (req, res) => {
  try {
    const authResponse = await axios.post('https://accept.paymobsolutions.com/api/auth/tokens', {
      api_key: process.env.PAYMOB_API_KEY,
    });

    const { token } = authResponse.data;
    res.status(200).json({ token });
  } catch (error) {
    console.error('Error in authentication:', error);
    res.status(500).json({ error: 'Authentication failed' });
  }
});

/**
 * Step 2: Create an order and payment key
 */
app.post('/api/paymob/create-payment', async (req, res) => {
  const { amount, token } = req.body; // Get amount and token from frontend

  try {
    // Create an order
    const orderResponse = await axios.post(
      'https://accept.paymobsolutions.com/api/ecommerce/orders',
      {
        auth_token: token,
        delivery_needed: 'false',
        amount_cents: amount * 100, // Amount in cents
        currency: 'EGP',
        items: [],
      }
    );

    const orderId = orderResponse.data.id;

    // Create a payment key
    const paymentKeyResponse = await axios.post(
      'https://accept.paymobsolutions.com/api/acceptance/payment_keys',
      {
        auth_token: token,
        amount_cents: amount * 100,
        expiration: 3600,
        order_id: orderId,
        billing_data: {
          // write what info do you want , cause i don't know -_-
        },
        currency: 'EGP',
        integration_id: process.env.PAYMOB_INTEGRATION_ID,
      }
    );

    const { token: paymentToken } = paymentKeyResponse.data;

    // Return the payment token to the frontend
    res.status(200).json({ paymentToken });
  } catch (error) {
    console.error('Error in creating payment:', error);
    res.status(500).json({ error: 'Payment creation failed' });
  }
});

/**
 * Step 3: Redirect to Paymob iframe for card details
 */
app.post('/api/paymob/complete-payment', (req, res) => {
  const { paymentToken } = req.body;

  const iframeUrl = `https://accept.paymobsolutions.com/api/acceptance/iframes/${process.env.PAYMOB_IFRAME_ID}?payment_token=${paymentToken}`;
  
  // Redirect to the iframe for the card details
  res.status(200).json({ iframeUrl });
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});

Step 5: Frontend 
import React, { useState } from 'react';
import axios from 'axios';

const PaymobPaymentForm = () => {
  const [paymentUrl, setPaymentUrl] = useState('');
  const [amount, setAmount] = useState(100); // Example amount in EGP

  const handlePayment = async () => {
    try {
      // Step 1: Authenticate with Paymob
      const { data: authData } = await axios.post('/api/paymob/authenticate');

      // Step 2: Create Payment
      const { data: paymentData } = await axios.post('/api/paymob/create-payment', {
        amount,
        token: authData.token,
      });

      // Step 3: Get iframe URL for payment
      const { data: iframeResponse } = await axios.post('/api/paymob/complete-payment', {
        paymentToken: paymentData.paymentToken,
      });

      // Step 4: Redirect or display the iframe for payment
      setPaymentUrl(iframeResponse.iframeUrl);
    } catch (error) {
      console.error('Payment failed:', error);
    }
  };

  return (
    <div>
      <h1>Paymob Payment</h1>
      <button onClick={handlePayment}>Pay</button>

      {paymentUrl && (
        <iframe src={paymentUrl} width="600" height="400" title="Payment" />
      )}
    </div>
  );
};

export default PaymobPaymentForm;
